{"version":3,"file":"static/js/431.f9fe010e.chunk.js","mappings":"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","sources":["components/TweetsEl/TweetsEl.styled.jsx","components/TweetItem/TweetItem.styled.jsx","components/TweetItem/TweetItem.jsx","components/TweetsEl/TweetsEl.jsx","../node_modules/nanoid/index.browser.js","components/Styled/CouponsPage.styled.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button } from 'components/Styled';\nimport logogoit from 'images/logogoit.png';\nimport picture_Ask_Quest from 'images/picture_Ask_Quest.png';\nimport { ReactComponent as Circle } from 'images/Ellipse_Stroke.svg';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStyled = styled(NavLink)`\n  cursor: pointer;\n\n  &:hover {\n    color: #5CD3A8;\n  }\n\n`;\n\nexport const ItemStyled = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nalign-items: center;\nborder-radius: 20px;\npadding-top: 124px;\noverflow: hidden;\nbackground: linear-gradient(142deg, #471CA9 0%, #5736A3 69.10%, #4B2A99 100%);\nbox-shadow: -2.5776965618133545px 6.873857021331787px 20.621572494506836px 0px rgba(0, 0, 0, 0.23);\nwidth: 320px;\nheight: 300px;\n`\n\nexport const TweetsWrapper = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nwidth: 310px;\n\n`\n\nexport const NameStyled = styled.h3`\ncolor: #EBD8FF;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 700;\nline-height: normal;\ntext-transform: uppercase;\n`\nexport const InfoStyled = styled.p`\ncolor: #EBD8FF;\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\ntext-transform: uppercase;\n&:hover {\n    color: #5CD3A8;\n  }\n`\nexport const RectStyled = styled.div`\nposition: absolute;\ntop: 70px;\nwidth: 100%;\nheight: 8px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.4369285106658936px 2.5776965618133545px 0px #FBF8FF inset, 0px 3.4369285106658936px 3.4369285106658936px 0px rgba(0, 0, 0, 0.06), 0px -1.7184642553329468px 3.4369285106658936px 0px #AE7BE3 inset;\n`\nexport const AvaThumbStyled = styled.div`\nposition: absolute;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ntop: 36px;\nwidth: 80px;\nheight: 80px;\nflex-shrink: 0;\nborder-radius: 100%;\noverflow: hidden;\n`\nexport const LogoThumbStyled = styled.div`\nbackground: url(${logogoit}) no-repeat;\nposition: absolute;\ntop: 20px;\nleft: 20px;\nwidth: 76px;\nheight: 22px;\n`\n\nexport const ImgThumbStyled = styled.div`\nposition: absolute;\nbackground: url(${picture_Ask_Quest}) no-repeat;\ntop: 28px;\nleft: 28px;\nwidth: 308px;\nheight: 168px;\n`\n\nexport const ImgStyled = styled.img`\nposition: absolute;\ntop: 5px;\n/* z-index:0; */\nborder-radius: 100%;\nwidth: 62px;\nheight: 62px;\n`\nexport const CircleStyled = styled(Circle)`\nposition: absolute;\nwidth: 80px;\nheight: 80px;\n`\n\nexport const FollowBtnStyled = styled(Button)`\nwidth: 196px;\npadding: 14px 28px;\ngap: 6px;\nborder-radius: 10.311px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.4369285106658936px 3.4369285106658936px 0px rgba(0, 0, 0, 0.25);\ncolor: #373737;\nfont-size: 18px;\nfont-style: normal;\nfont-weight: 600;\nline-height: normal;\ntext-transform: uppercase;\n`\n\n\nexport const TweetsBox = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 20px;\n  margin: 10px auto 30px 10px;\n  padding: 30px;\n`;\n\n;\n","import styled from '@emotion/styled';\n\nexport const TweetBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  background: linear-gradient(\n    142deg,\n    #5824d0e5 0%,\n    #6841c3e4 69.1%,\n    #6339c7ed 100%\n  );\n  box-shadow: -2.5776965618133545px 6.873857021331787px 20.621572494506836px 0px\n    rgba(0, 0, 0, 0.23);\n  padding: 20px 10px;\n  border-radius: 10px;\n`;\n\nexport const TweetText = styled.p`\ncolor: #EBD8FF;\nfont-size: 14px;\nfont-weight: 500;\ntext-align: start;\n`\n\nexport const TweetData = styled.p`\ncolor: #EBD8FF;\nfont-size: 10px;\nfont-weight: 500;\ntext-align: right;\n`","import React from 'react';\nimport {\n  TweetBox, TweetData, TweetText,\n} from './TweetItem.styled';\n\nexport const TweetItem = ({ text, date }) => {\n \n  return (\n    <TweetBox>\n      <TweetText>{text}</TweetText>\n      <TweetData>{date}</TweetData>\n    </TweetBox>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport {\n  TweetsBox,\n  ImgStyled,\n  FollowBtnStyled,\n  RectStyled,\n  AvaThumbStyled,\n  LogoThumbStyled,\n  NameStyled,\n  InfoStyled,\n  CircleStyled,\n  ItemStyled,\n  LinkStyled,\n  TweetsWrapper,\n} from './TweetsEl.styled';\n\nimport { TweetItem } from 'components/TweetItem/TweetItem';\nimport { selectFavUsers, selectuserById } from 'redux/user/selectors';\nimport { updateUserById } from 'redux/user/operations';\nimport { addToFavArr, removeFromFavArr, takeEmptyUser } from 'redux/user/slice';\n\nexport const TweetsEl = (location) => {\n  const user = useSelector(selectuserById);\n  const { id, name, avatar, tweets, followers} = user;\n  const favUsers = useSelector(selectFavUsers);\n  const check = favUsers.includes(id);\n  const [followersValue, setFollowersValue] = useState(followers);\n  const [isFollow, setIsFollow] = useState(check);\n  const dispatch = useDispatch();\n\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/');\n const handleBackClick = () => {\n  dispatch(takeEmptyUser());\n  \n }\n  const addToFavorite = () => {\n    const user = {\n      id,\n      name,\n      avatar,\n      followers,\n      tweets,\n    };\n    user.followers += 1;\n    setFollowersValue(pr => (pr += 1));\n    dispatch(updateUserById(user));\n    dispatch(addToFavArr(id));\n    setIsFollow(true);\n  };\n  const removeFromFavorite = () => {\n    const user = {\n      id,\n      name,\n      avatar,\n      followers,\n      tweets,\n    };\n    setFollowersValue(pr => (pr -= 1));\n    user.followers -= 1;\n    dispatch(updateUserById(user));\n    dispatch(removeFromFavArr(id));\n    setIsFollow(false);\n  };\n\n  const handleImageError = (e) => {\n    e.target.src = \"https://res.cloudinary.com/dj5smkin6/image/upload/v1689277252/Screenshot_15_rfh3yi.jpg\";\n  };\n\n  return (\n    <TweetsBox>\n      <LinkStyled to={backLinkLocationRef.current} onClick={handleBackClick}>&#8592; Go back</LinkStyled>\n      <ItemStyled>\n      <RectStyled></RectStyled>\n      <LogoThumbStyled />\n      <AvaThumbStyled>\n        <ImgStyled src={avatar} alt={name} onError={handleImageError}/>\n        <CircleStyled />\n      </AvaThumbStyled>\n      <NameStyled>{name}</NameStyled>\n\n        <InfoStyled >{tweets?.length} tweets</InfoStyled>\n\n      <InfoStyled>{followersValue} followers</InfoStyled>\n      <FollowBtnStyled\n        className={isFollow ? 'green' : ''}\n        onClick={isFollow ? removeFromFavorite : addToFavorite}\n      >\n        {isFollow ? 'Following' : 'Follow'}\n      </FollowBtnStyled>\n      </ItemStyled>\n      <TweetsWrapper>\n      {tweets?.map(({ text, date }) => (\n        <TweetItem\n          text={text}\n          key={nanoid()}\n          date={date}\n        />\n      ))}\n\n      </TweetsWrapper>\n    </TweetsBox>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\n\nexport const TweetsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 55px;\n\n`;\n","\n\n\nimport { TweetsEl } from 'components/TweetsEl/TweetsEl';\nimport { TweetsStyled } from 'components/Styled/CouponsPage.styled';\n\nconst Tweets = () => {\n  return (\n    <TweetsStyled>\n      \n      <TweetsEl />\n\n    </TweetsStyled>\n  );\n};\n\nexport default Tweets;\n"],"names":["LinkStyled","styled","NavLink","ItemStyled","TweetsWrapper","NameStyled","InfoStyled","RectStyled","AvaThumbStyled","LogoThumbStyled","logogoit","ImgStyled","picture_Ask_Quest","CircleStyled","Circle","FollowBtnStyled","Button","TweetsBox","TweetBox","TweetText","TweetData","TweetItem","text","date","TweetsEl","location","user","useSelector","selectuserById","id","name","avatar","tweets","followers","check","selectFavUsers","includes","useState","followersValue","setFollowersValue","isFollow","setIsFollow","dispatch","useDispatch","backLinkLocationRef","useRef","state","from","to","current","onClick","takeEmptyUser","src","alt","onError","e","target","length","className","pr","updateUserById","removeFromFavArr","addToFavArr","map","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","TweetsStyled"],"sourceRoot":""}